@page "/admin/orders"

@inherits OwningComponentBase<IOrderRepository>

<OrderTable TableTitle="Unprocessed Orders" Orders="UnprocessedOrders"
            ButtonLabel="Shipped" OrderSelected="ShipOrder"></OrderTable>

<OrderTable TableTitle="Shipped Orders" Orders="ShippedOrders"
            ButtonLabel="Reset" OrderSelected="ResetOrder"></OrderTable>

<button class="btn btn-info text-white" @onclick="@(x => UpdateData())">Refresh Data</button>

@code {

    public IOrderRepository repo => Service;

    public IEnumerable<Order> AllOrders { get; set; }
    public IEnumerable<Order> UnprocessedOrders { get; set; }
    public IEnumerable<Order> ShippedOrders { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }

    public async Task UpdateData()
    {
        AllOrders = await repo.Orders.ToListAsync();
        UnprocessedOrders = AllOrders.Where(x => !x.OrderReceived);
        ShippedOrders = AllOrders.Where(x => x.OrderReceived);
    }

    public void ShipOrder(int id) => UpdateOrder(id, true);
    public void ResetOrder(int id) => UpdateOrder(id, false);

    private void UpdateOrder(int id, bool shipped)
    {
        Order o = repo.Orders.FirstOrDefault(x => x.OrderId == id);
        o.OrderReceived = shipped;
        repo.SaveOrder(o);
    }
}
